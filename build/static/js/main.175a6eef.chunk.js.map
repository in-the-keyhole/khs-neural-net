{"version":3,"sources":["../../khs-nueral-net/src/logo.svg","../../khs-nueral-net/src/utils/DrawUtil.js","../../khs-nueral-net/src/utils/api.js","../../khs-nueral-net/src/views/MainView.js","../../khs-nueral-net/src/App.js","../../khs-nueral-net/src/serviceWorker.js","../../khs-nueral-net/src/index.js"],"names":["module","exports","__webpack_require__","p","DrawUtil","canvas","startPoint","endPoint","color","thickness","ctx","getContext","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","x","y","lineTo","stroke","restore","outputSize","oc","document","createElement","octx","width","height","drawImage","oc2","oc3","octx3","fillStyle","fillRect","oc4","oc5","octx5","strokeRect","toDataURL","img","Image","URL","window","location","hostname","includes","concat","instance","axios","create","baseURL","headers","Content-Type","withCredentials","MainView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadImage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dataUrl","body","_ref2","data","wrap","_context","prev","next","DataURI","api","post","sent","setState","prediction","stop","_x","apply","arguments","scale","e","getImageDataAndScale","clear","event","clearRect","isDrawing","handleDrawStart","handleMouseMove","handleDrawEnd","previousMousePosition","clientMousePosition","clientCoordinatesFromEvent","preventDefault","stopPropagation","canvasRect","getBoundingClientRect","newPosition","left","top","updateMousePosition","draw","setTimeout","mousePosition","drawingBoardScale","state","dataURI","byteString","atob","split","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","addEventListener","removeEventListener","newMousePosition","brushDiameter","drawLine","clientX","clientY","touches","_this2","Prediction","react_default","className","ref","boardWrapper","onMouseMove","onMouseDown","onTouchStart","onTouchMove","onClick","style","fontSize","Component","App","views_MainView","Boolean","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.175a6eef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\n\nclass DrawUtil {\n\n    static drawLine(canvas, startPoint, endPoint, color, thickness) {\n        let ctx = canvas.getContext('2d');\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = thickness;\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(startPoint.x, startPoint.y);\n        ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n        ctx.stroke();\n        ctx.restore();\n    }\n\n\n\n    static getImageDataAndScale(canvas, outputSize) {\n       \n       /*\n        let scaled = document.createElement(\"canvas\");\n        let scaledCtx = scaled.getContext('2d');\n\n        // scale down 50%\n\n        let swidth = canvas.width * 0.50;\n        let sheight = canvas.height * 0.50;\n        scaledCtx\n\n\n        scaled.width = outputSize;\n        scaled.height = outputSize;\n        scaledCtx.drawImage(canvas, 0, 0, outputSize, outputSize); */\n\n         // set size proportional to image\n    \n        // step 1 - resize to 50%\n        var oc = document.createElement('canvas');\n        var octx = oc.getContext('2d');\n\n        oc.width = canvas.width * 0.5;\n        oc.height = canvas.height * 0.5;\n        octx.drawImage(canvas, 0, 0, oc.width, oc.height);\n\n        var oc2 = document.createElement('canvas');\n        oc2.width = oc.width * 0.5;\n        oc2.height = oc.height * 0.5;\n\n        var octx2 = oc2.getContext('2d');\n\n         // step 2\n        octx2.drawImage(oc, 0, 0, oc2.width , oc2.height);\n\n        // step 3, resize to final size\n        var oc3 = document.createElement('canvas');\n        oc3.width = oc2.width * 0.50;\n        oc3.height = oc2.height * 0.50;\n        var octx3 = oc3.getContext('2d');\n        octx3.fillStyle = \"#FFF\";\n        octx3.fillRect(0, 0, oc3.width, oc3.height);\n\n        //octx3.drawImage(oc2, 0, 0, outputSize, outputSize);\n\n       // octx3.drawImage(canvas, 0, 0, canvas.width, canvas.height,0,0,outputSize,outputSize);\n\n        octx3.drawImage(oc2,0,0,oc2.width * 0.50, oc2.height * 0.50);\n\n         var oc4 = document.createElement('canvas');\n         oc4.width = 20;\n         oc4.height = 20;\n         var octx4 = oc4.getContext('2d');\n\n         octx4.drawImage(oc3, 0, 0, 20,20);\n\n\n         var oc5 = document.createElement('canvas');\n         oc5.width = outputSize;\n         oc5.height = outputSize;\n         var octx5 = oc5.getContext('2d');\n         octx5.fillStyle = \"#FFF\";\n         octx5.fillRect(0,0, outputSize,outputSize);\n         octx5.drawImage(oc4, 0,0,outputSize,outputSize );\n \n         octx5.strokeStyle = \"#000\";\n         octx5.lineWidth = 1;\n         octx5.strokeRect(0, 0, oc5.width, oc5.height);\n\n         \n\n\n        return oc5.toDataURL();\n    }\n\n\n   static downsize(canvas,outputSize) {\n\n    var ctx = canvas.getContext(\"2d\");\n    var img = new Image();\n    img.height = canvas.height;\n    img.width = canvas.width;\n                 \n    // set size proportional to image\n    //canvas.height = canvas.width * (img.height / img.width);\n\n    // step 1 - resize to 50%\n    var oc = document.createElement('canvas'),\n        octx = oc.getContext('2d');\n\n    oc.width = img.width * 0.5;\n    oc.height = img.height * 0.5;\n    octx.drawImage(img, 0, 0, oc.width, oc.height);\n\n    // step 2\n    octx.drawImage(oc, 0, 0, oc.width * 0.5, oc.height * 0.5);\n\n    // step 3, resize to final size\n    ctx.drawImage(oc, 0, 0, oc.width * 0.5, oc.height * 0.5,\n    0, 0, canvas.width, canvas.height);\n    \n    }\n\n}\n\n\nexport default DrawUtil\n","import axios from 'axios'\n\n\nconst URL = window.location.hostname.includes('localhost')\n    ? `http://${window.location.hostname}:8000/api/`\n    : `https://${window.location.hostname}/api/`;\n\nconst instance = axios.create({\n    baseURL: URL,\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: false\n});\n\nexport default instance\n","import React, {Component} from 'react'\nimport DrawUtil from '../utils/DrawUtil.js'\nimport api from '../utils/api.js'\n\nconst MNIST_MODEL_INPUT_PIXEL_SIZE = 28;\nconst MNIST_DRAWING_BOARD_BASE_DIM = 400;   \nconst MNIST_DRAWING_BOARD_BASE_TEXT_SIZE = 40;\nconst MNIST_DRAWING_BOARD_BASE_BRUSH_DIAMETER = 40;  //40\nconst MNIST_DRAWING_BOARD_BASE_BRUSH_COLOR = \"#000\";\n\n\nclass MainView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.previousMousePosition = null;\n        this.mousePosition = null;\n        this.isDrawing = false;\n        this.drawingBoardScale = 1;\n        this.state = {prediction: null};\n       \n     \n    }\n\n    uploadImage = async (dataUrl) => {\n\n        const body = {\n            DataURI: dataUrl\n        };\n\n        const {data} = await api.post('predict', body);\n\n        this.setState({prediction: data});\n     \n\n    }\n\n\n\n    dataURItoBlob(dataURI) {\n    var byteString = atob(dataURI.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {type: 'image/png'});\n  }\n\n\n    scale = (e) => {\n\n       let dataUrl = DrawUtil.getImageDataAndScale(this.canvas,28)\n\n        this.uploadImage(dataUrl)\n\n    }\n\n\n    componentDidMount() {\n\n        let ctx = this.canvas.getContext('2d');\n        ctx.fillStyle = \"#FFF\";\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n       \n       // window.addEventListener(\"resize\", this.setUpCanvas);\n        window.addEventListener(\"mouseup\", this.handleDrawEnd);\n        window.addEventListener(\"touchend\", this.handleDrawEnd);\n    }\n\n    componentDidUpdate() {\n        //this.setUpCanvas();\n       \n\n    }\n\n    componentWillUnmount() {\n       // this.props.onNewPrediction([]);\n       // window.removeEventListener(\"resize\", this.setUpCanvas);\n        window.removeEventListener(\"mouseup\", this.handleDrawEnd);\n        window.removeEventListener(\"touchend\", this.handleDrawEnd);\n    }\n\n    clear = (event) => {\n\n      let ctx = this.canvas.getContext('2d');\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      ctx.fillStyle = \"#FFF\";\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      this.isDrawing = false;\n      this.setState({prediction: null});\n     \n\n\n    }\n\n    updateMousePosition (newMousePosition) {\n        this.previousMousePosition = this.previousMousePosition ? this.mousePosition : newMousePosition;\n        this.mousePosition = newMousePosition;\n    }\n\n\n    handleDrawStart = (event) => {\n        this.isDrawing = true;\n        this.handleMouseMove(event);\n       \n    };\n\n     handleDrawEnd = () => {\n        this.isDrawing = false;\n        this.previousMousePosition = null;\n    };\n\n    handleMouseMove = (event) => {\n        const clientMousePosition = this.clientCoordinatesFromEvent(event);\n        event.preventDefault();\n        event.stopPropagation();\n        if (clientMousePosition && !!this.canvas) {\n            const canvasRect = this.canvas.getBoundingClientRect();\n            const newPosition = {\n                x: clientMousePosition.x - canvasRect.left,\n                y: clientMousePosition.y - canvasRect.top\n            };\n            this.updateMousePosition(newPosition);\n        }\n        if (this.isDrawing) {\n            this.draw();\n            setTimeout(this.scale(event), 0);\n        }\n    };\n\n   draw() {\n        const brushDiameter = this.drawingBoardScale * MNIST_DRAWING_BOARD_BASE_BRUSH_DIAMETER;\n        const brushColor = MNIST_DRAWING_BOARD_BASE_BRUSH_COLOR;\n        DrawUtil.drawLine(this.canvas, this.previousMousePosition, this.mousePosition, brushColor, brushDiameter);\n    }\n\n\n    clientCoordinatesFromEvent(event) {\n        if (\"clientX\" in event)\n            return {x: event.clientX, y: event.clientY};\n        else if (typeof event.touches !== \"undefined\" && event.touches.length)\n            return {x: event.touches[0].clientX, y: event.touches[0].clientY};\n        else\n            return null;\n    }\n\n render() {\n\n    let Prediction = <span> </span>;\n\n    if (this.state.prediction != null) {\n        Prediction = <span>{this.state.prediction}</span>;\n    }\n\n    return (\n\n   <div className=\"container\">     \n\n\n    <div className=\"row\">\n        <div className=\"col-md-6\">\n          \n            \n             <div ref = {ref => this.boardWrapper = ref}>\n                    <canvas  width={MNIST_DRAWING_BOARD_BASE_DIM} height={MNIST_DRAWING_BOARD_BASE_DIM} ref = {ref => this.canvas = ref}\n                        onMouseMove={this.handleMouseMove}\n                        onMouseDown={this.handleDrawStart}\n                        onTouchStart={this.handleDrawStart}\n                        onTouchMove={this.handleMouseMove}\n                    />\n            </div>\n\n            <button onClick={this.clear}>Clear</button>\n\n            <button onClick={this.scale}>Predict</button>\n\n        </div>\n\n    <div className=\"col-md-6\">\n            \n           Prediction\n\n            <div style={{fontSize: \"200px\"}}>{Prediction}</div>\n\n    </div>\n\n    </div>\n    </div>)\n\n }    \n}\n\n\n export default MainView","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainView from './views/MainView.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MainView />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}