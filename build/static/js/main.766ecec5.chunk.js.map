{"version":3,"sources":["utils/DrawUtil.js","utils/api.js","views/MainView.js","App.js","index.js"],"names":["DrawUtil","canvas","startPoint","endPoint","color","thickness","ctx","getContext","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","x","y","lineTo","stroke","restore","outputSize","oc","document","createElement","octx","width","height","drawImage","oc2","oc3","octx3","fillStyle","fillRect","oc4","oc5","octx5","strokeRect","toDataURL","img","Image","URL","window","location","hostname","includes","concat","instance","axios","create","baseURL","headers","Content-Type","withCredentials","MainView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadImage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dataUrl","body","_ref2","data","wrap","_context","prev","next","DataURI","api","post","sent","setState","prediction","stop","_x","apply","arguments","scale","e","getImageDataAndScale","clear","event","clearRect","isDrawing","handleDrawStart","handleMouseMove","handleDrawEnd","previousMousePosition","clientMousePosition","clientCoordinatesFromEvent","preventDefault","stopPropagation","canvasRect","getBoundingClientRect","newPosition","left","top","updateMousePosition","draw","setTimeout","mousePosition","drawingBoardScale","state","dataURI","byteString","atob","split","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","addEventListener","removeEventListener","newMousePosition","brushDiameter","drawLine","clientX","clientY","touches","_this2","Prediction","react_default","className","href","ref","boardWrapper","onMouseMove","onMouseDown","onTouchStart","onTouchMove","onClick","style","fontSize","Component","App","views_MainView","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.766ecec5.chunk.js","sourcesContent":["\n\nclass DrawUtil {\n\n    static drawLine(canvas, startPoint, endPoint, color, thickness) {\n        let ctx = canvas.getContext('2d');\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = thickness;\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(startPoint.x, startPoint.y);\n        ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n        ctx.stroke();\n        ctx.restore();\n    }\n\n\n    static getImageDataAndScale(canvas, outputSize) {\n\n\n        // step 1 - resize to 50%\n        var oc = document.createElement('canvas');\n        var octx = oc.getContext('2d');\n\n        oc.width = canvas.width * 0.5;\n        oc.height = canvas.height * 0.5;\n        octx.drawImage(canvas, 0, 0, oc.width, oc.height);\n\n        var oc2 = document.createElement('canvas');\n        oc2.width = oc.width * 0.5;\n        oc2.height = oc.height * 0.5;\n\n        var octx2 = oc2.getContext('2d');\n\n        // step 2\n        octx2.drawImage(oc, 0, 0, oc2.width, oc2.height);\n\n        // step 3, resize to final size\n        var oc3 = document.createElement('canvas');\n        oc3.width = oc2.width * 0.50;\n        oc3.height = oc2.height * 0.50;\n        var octx3 = oc3.getContext('2d');\n        octx3.fillStyle = \"#FFF\";\n        octx3.fillRect(0, 0, oc3.width, oc3.height);\n\n        //octx3.drawImage(oc2, 0, 0, outputSize, outputSize);\n\n        // octx3.drawImage(canvas, 0, 0, canvas.width, canvas.height,0,0,outputSize,outputSize);\n\n        octx3.drawImage(oc2, 0, 0, oc2.width * 0.50, oc2.height * 0.50);\n\n        var oc4 = document.createElement('canvas');\n        oc4.width = 20;\n        oc4.height = 20;\n        var octx4 = oc4.getContext('2d');\n\n        octx4.drawImage(oc3, 0, 0, 20, 20);\n\n\n        var oc5 = document.createElement('canvas');\n        oc5.width = outputSize;\n        oc5.height = outputSize;\n        var octx5 = oc5.getContext('2d');\n        octx5.fillStyle = \"#FFF\";\n        octx5.fillRect(0, 0, outputSize, outputSize);\n        octx5.drawImage(oc4, 0, 0, outputSize, outputSize);\n\n        octx5.strokeStyle = \"#000\";\n        octx5.lineWidth = 1;\n        octx5.strokeRect(0, 0, oc5.width, oc5.height);\n\n\n\n\n        return oc5.toDataURL();\n    }\n\n\n    static downsize(canvas, outputSize) {\n\n        var ctx = canvas.getContext(\"2d\");\n        var img = new Image();\n        img.height = canvas.height;\n        img.width = canvas.width;\n\n        // set size proportional to image\n        //canvas.height = canvas.width * (img.height / img.width);\n\n        // step 1 - resize to 50%\n        var oc = document.createElement('canvas'),\n            octx = oc.getContext('2d');\n\n        oc.width = img.width * 0.5;\n        oc.height = img.height * 0.5;\n        octx.drawImage(img, 0, 0, oc.width, oc.height);\n\n        // step 2\n        octx.drawImage(oc, 0, 0, oc.width * 0.5, oc.height * 0.5);\n\n        // step 3, resize to final size\n        ctx.drawImage(oc, 0, 0, oc.width * 0.5, oc.height * 0.5,\n            0, 0, canvas.width, canvas.height);\n\n    }\n\n}\n\n\nexport default DrawUtil\n","import axios from 'axios'\n\n\nconst URL = window.location.hostname.includes('localhost')\n    ? `http://${window.location.hostname}:8000/api/`\n    : `https://${window.location.hostname}/api/`;\n\nconst instance = axios.create({\n    baseURL: URL,\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: false\n});\n\nexport default instance\n","import React, { Component } from 'react'\nimport DrawUtil from '../utils/DrawUtil.js'\nimport api from '../utils/api.js'\n\nconst MNIST_MODEL_INPUT_PIXEL_SIZE = 28;\nconst MNIST_DRAWING_BOARD_BASE_DIM = 400;\nconst MNIST_DRAWING_BOARD_BASE_TEXT_SIZE = 40;\nconst MNIST_DRAWING_BOARD_BASE_BRUSH_DIAMETER = 40;  //40\nconst MNIST_DRAWING_BOARD_BASE_BRUSH_COLOR = \"#000\";\n\n\nclass MainView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.previousMousePosition = null;\n        this.mousePosition = null;\n        this.isDrawing = false;\n        this.drawingBoardScale = 1;\n        this.state = { prediction: null };\n\n\n    }\n\n    uploadImage = async (dataUrl) => {\n\n        const body = {\n            DataURI: dataUrl\n        };\n\n        const { data } = await api.post('predict', body);\n\n        this.setState({ prediction: data });\n\n\n    }\n\n\n\n    dataURItoBlob(dataURI) {\n        var byteString = atob(dataURI.split(',')[1]);\n        var ab = new ArrayBuffer(byteString.length);\n        var ia = new Uint8Array(ab);\n        for (var i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ab], { type: 'image/png' });\n    }\n\n\n    scale = (e) => {\n\n        let dataUrl = DrawUtil.getImageDataAndScale(this.canvas, 28)\n\n        this.uploadImage(dataUrl)\n\n    }\n\n\n    componentDidMount() {\n\n        let ctx = this.canvas.getContext('2d');\n        ctx.fillStyle = \"#FFF\";\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // window.addEventListener(\"resize\", this.setUpCanvas);\n        window.addEventListener(\"mouseup\", this.handleDrawEnd);\n        window.addEventListener(\"touchend\", this.handleDrawEnd);\n    }\n\n    componentDidUpdate() {\n        //this.setUpCanvas();\n\n\n    }\n\n    componentWillUnmount() {\n        // this.props.onNewPrediction([]);\n        // window.removeEventListener(\"resize\", this.setUpCanvas);\n        window.removeEventListener(\"mouseup\", this.handleDrawEnd);\n        window.removeEventListener(\"touchend\", this.handleDrawEnd);\n    }\n\n    clear = (event) => {\n\n        let ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.fillStyle = \"#FFF\";\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.isDrawing = false;\n        this.setState({ prediction: null });\n\n\n\n    }\n\n    updateMousePosition(newMousePosition) {\n        this.previousMousePosition = this.previousMousePosition ? this.mousePosition : newMousePosition;\n        this.mousePosition = newMousePosition;\n    }\n\n\n    handleDrawStart = (event) => {\n        this.isDrawing = true;\n        this.handleMouseMove(event);\n\n    };\n\n    handleDrawEnd = () => {\n        this.isDrawing = false;\n        this.previousMousePosition = null;\n    };\n\n    handleMouseMove = (event) => {\n        const clientMousePosition = this.clientCoordinatesFromEvent(event);\n        event.preventDefault();\n        event.stopPropagation();\n        if (clientMousePosition && !!this.canvas) {\n            const canvasRect = this.canvas.getBoundingClientRect();\n            const newPosition = {\n                x: clientMousePosition.x - canvasRect.left,\n                y: clientMousePosition.y - canvasRect.top\n            };\n            this.updateMousePosition(newPosition);\n        }\n        if (this.isDrawing) {\n            this.draw();\n            setTimeout(this.scale(event), 0);\n        }\n    };\n\n    draw() {\n        const brushDiameter = this.drawingBoardScale * MNIST_DRAWING_BOARD_BASE_BRUSH_DIAMETER;\n        const brushColor = MNIST_DRAWING_BOARD_BASE_BRUSH_COLOR;\n        DrawUtil.drawLine(this.canvas, this.previousMousePosition, this.mousePosition, brushColor, brushDiameter);\n    }\n\n\n    clientCoordinatesFromEvent(event) {\n        if (\"clientX\" in event)\n            return { x: event.clientX, y: event.clientY };\n        else if (typeof event.touches !== \"undefined\" && event.touches.length)\n            return { x: event.touches[0].clientX, y: event.touches[0].clientY };\n        else\n            return null;\n    }\n\n    render() {\n\n        let Prediction = <span> </span>;\n\n        if (this.state.prediction != null) {\n            Prediction = <span>{this.state.prediction}</span>;\n        }\n\n        return (\n\n            <div className=\"container\">\n\n               <div className=\"row\">\n                    <div className=\"col-md-12\"> <p className=\"text-center font-weight-light\"><a href=\"https://keyholesoftware.com\">Keyhole Software's</a>  MNIST implementation recognizes numbers (0-9), source code <a href=\"https://github.com/in-the-keyhole/khs-neural-net\">HERE</a> </p>  </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n\n\n                        <div ref={ref => this.boardWrapper = ref}>\n                            <canvas width={MNIST_DRAWING_BOARD_BASE_DIM} height={MNIST_DRAWING_BOARD_BASE_DIM} ref={ref => this.canvas = ref}\n                                onMouseMove={this.handleMouseMove}\n                                onMouseDown={this.handleDrawStart}\n                                onTouchStart={this.handleDrawStart}\n                                onTouchMove={this.handleMouseMove}\n                            />\n                        </div>\n\n                        <button onClick={this.clear}>Clear</button>\n\n                    </div>\n\n                    <div className=\"col-md-6\">\n\n                        Prediction\n             \n            <div style={{ fontSize: \"250px\" }}>{Prediction}</div>\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\"> &nbsp; </div>\n                    <div className=\"col-md-12\"> <p className=\"text-center font-weight-light\">Keep trying, this is a simple Perceptron Neural Net. Draw in center... </p>       </div>\n                </div>\n\n            </div>)\n\n    }\n}\n\n\nexport default MainView","import React from 'react';\nimport './App.css';\nimport MainView from './views/MainView.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MainView />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}